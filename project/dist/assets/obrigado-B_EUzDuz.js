import"./style-CkDHoPGJ.js";import{D as r,V as o,C as s}from"./vega-data-Clz6VBdn.js";class i{constructor(){this.dbService=new r,this.vegaData=null,this.init()}async init(){console.log("🎉 Inicializando página de Obrigado");try{await this.processVegaData(),this.displayOrderData(),this.setupTrackingButton(),console.log("✅ Página de Obrigado inicializada com sucesso")}catch(e){console.error("❌ Erro na inicialização da página de Obrigado:",e),this.showError("Erro ao carregar dados do pedido")}}async processVegaData(){if(o.isVegaOrigin())console.log("📦 Processando dados do Vega Checkout"),this.vegaData=o.parseURLParams();else{const a=new URLSearchParams(window.location.search).get("cpf");if(a){console.log("🔍 Buscando dados existentes para CPF:",a);const t=await this.dbService.getLeadByCPF(a);t.success&&t.data?this.vegaData=t.data:this.vegaData=o.generateMockVegaData(a)}else this.vegaData=o.generateMockVegaData("12345678901")}this.vegaData&&await this.saveLeadData()}async saveLeadData(){try{const e=await this.dbService.getLeadByCPF(this.vegaData.cpf);if(e.success&&e.data)console.log("📝 Lead já existe, atualizando dados");else{console.log("📝 Criando novo lead no banco de dados");const a=await this.dbService.createLead(this.vegaData);a.success?console.log("✅ Lead salvo com sucesso"):console.warn("⚠️ Erro ao salvar lead:",a.error)}}catch(e){console.error("❌ Erro ao salvar dados do lead:",e)}}displayOrderData(){if(!this.vegaData){this.showError("Dados do pedido não encontrados");return}this.updateElement("customerName",this.vegaData.nome_completo),this.updateElement("customerCPF",s.formatCPF(this.vegaData.cpf)),this.updateElement("customerEmail",this.vegaData.email||"Não informado"),this.updateElement("customerPhone",this.vegaData.telefone||"Não informado"),this.updateElement("customerAddress",this.vegaData.endereco||"Não informado"),this.updateElement("totalValue",this.formatCurrency(this.vegaData.valor_total)),this.updateElement("paymentMethod",this.vegaData.meio_pagamento||"PIX"),this.updateElement("purchaseDate",this.formatDate(this.vegaData.data_compra)),this.displayProducts()}displayProducts(){const e=document.getElementById("productsList");if(!e)return;e.innerHTML="";const a={nome:"Kit 12 caixas organizadoras + brinde",preco:this.vegaData.valor_total||67.9,imagem:"/traduza-have-you-propose copy.png"};e.appendChild(this.createProductElement(a,!0)),this.vegaData.order_bumps&&this.vegaData.order_bumps.length>0&&this.vegaData.order_bumps.forEach(t=>{e.appendChild(this.createProductElement(t,!1))})}createProductElement(e,a=!1){const t=document.createElement("div");return t.className=`product-item ${a?"main-product":"order-bump"}`,t.innerHTML=`
            <div class="product-image">
                <img src="${e.imagem}" alt="${e.nome}" onerror="this.src='/traduza-have-you-propose copy.png'">
            </div>
            <div class="product-details">
                <h4 class="product-name">${e.nome}</h4>
                <div class="product-price">${this.formatCurrency(e.preco)}</div>
                ${a?'<span class="main-badge">Produto Principal</span>':'<span class="bump-badge">Order Bump</span>'}
            </div>
        `,t}setupTrackingButton(){const e=document.getElementById("trackOrderButton");e&&e.addEventListener("click",()=>{if(this.vegaData&&this.vegaData.cpf){const t=`/rastreamento.html?origem=vega&cpf=${this.vegaData.cpf.replace(/[^\d]/g,"")}`;window.location.href=t}else window.location.href="/rastreamento.html"})}updateElement(e,a){const t=document.getElementById(e);t&&(t.textContent=a)}formatCurrency(e){return e?new Intl.NumberFormat("pt-BR",{style:"currency",currency:"BRL"}).format(parseFloat(e)):"R$ 0,00"}formatDate(e){return e?new Date(e).toLocaleDateString("pt-BR",{day:"2-digit",month:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit"}):"Data não informada"}showError(e){console.error("❌ Erro:",e),this.updateElement("customerName","Cliente Shopee"),this.updateElement("customerCPF","000.000.000-00"),this.updateElement("customerEmail","cliente@email.com"),this.updateElement("customerPhone","(11) 99999-9999"),this.updateElement("customerAddress","Endereço não informado"),this.updateElement("totalValue","R$ 67,90"),this.updateElement("paymentMethod","PIX"),this.updateElement("purchaseDate",new Date().toLocaleDateString("pt-BR"))}}document.addEventListener("DOMContentLoaded",()=>{new i});
